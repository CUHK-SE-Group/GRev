2023-04-21 15:22:39,398 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2023-04-21 15:22:41,985 - root - INFO - Unexpected exception: {code: Neo.DatabaseError.General.UnknownError} {message: Expected a sorted plan but got
.apply(fromSubquery = false)
.|.argument()
.projection(project = Seq("NULL AS `  n1@254`", "NULL AS `  n2@255`", "NULL AS `  UNNAMED2`", "NULL AS `  UNNAMED0`", "NULL AS `  UNNAMED1`", "NULL AS `  UNNAMED3`", "NULL AS `  n0@253`"), discard = Set("a1", "a3", "a0", "a2"))
.limit(0)
.apply(fromSubquery = false)
.|.argument()
.filter("true")
.aggregation(Seq("`  n3@250`.k2 AS a1", "r3.k73 AS a3"), Seq("min($`  AUTOINT2`) AS a0", "min($`  AUTOSTRING3`) AS a2"))
.apply(fromSubquery = false)
.|.optional("  n3@250", "r2", "  n1@249")
.|.filter("`  n0@252`:L0")
.|.expandAll("(  n4@251)<-[r3:T5]-(  n0@252)")
.|.filter("`  n4@251`.k29 >= $`  AUTOSTRING1`")
.|.nodeByLabelScan("  n4@251", "L4", IndexOrderNone)
.filter("r2.id > $`  AUTOINT0`")
.expandAll("(  n3@250)-[r2:T3]->(  n1@249)")
.nodeByLabelScan("  n3@250", "L0", IndexOrderNone)
.build()}. Triggering Query: MATCH (n1), (n1)<-[r2 :T3]-(n3 :L0) WHERE ((r2.id) > -1) OPTIONAL MATCH (n4 :L4)<-[r3 :T5]-(n0 :L0) WHERE ((n4.k29) >= '1kV3AF5') WITH min(1975971580) AS a0, (n3.k2) AS a1, min('K') AS a2, (r3.k73) AS a3 WHERE true MATCH (n0 :L1)-[]->(n1)<-[]-(n2 :L2) WHERE (NOT true) MATCH (n0)-[]->(n1)<-[]-(n2 :L0) WITH a1 ORDER BY a1 WHERE true OPTIONAL MATCH (n4 :L4)<-[]-(n0) OPTIONAL MATCH (n2 :L2)-[]->(n1)<-[]-(n3) WHERE ((n2.k12) <= (n2.k14)) OPTIONAL MATCH (n2)-[]->(n1)<-[]-(n3) RETURN a1
2023-04-21 15:23:25,310 - root - INFO - Unexpected exception: {code: Neo.DatabaseError.General.UnknownError} {message: Expected a sorted plan but got
.apply(fromSubquery = false)
.|.argument()
.projection(project = Seq("NULL AS `  n3@4`", "NULL AS `  n9@5`", "NULL AS r8"), discard = Set("a1", "a0", "a2"))
.limit(0)
.apply(fromSubquery = false)
.|.argument()
.orderedAggregation(Seq("r0.k54 AS a1"), Seq("max($`  AUTOSTRING3`) AS a0", "max($`  AUTOSTRING4`) AS a2"), Seq("r0.k54"))
.apply(fromSubquery = false)
.|.filter("not r5.id = r7.id")
.|.cartesianProduct(fromSubquery = false)
.|.|.filter("`  n9@3`:L6")
.|.|.expandAll("(n8)<-[r7:T2]-(  n9@3)")
.|.|.nodeByLabelScan("n8", "L2", IndexOrderNone, "r0")
.|.filter("not r2.id = r4.id", "not r3.id = r4.id", "not `r3` = `r4`")
.|.cartesianProduct(fromSubquery = false)
.|.|.expandAll("(n6)-[r4:T3]->(  n0@2)")
.|.|.nodeByLabelScan("n6", "L1", IndexOrderNone, "r0")
.|.filter("not r2.id = r3.id")
.|.expandInto("(n4)<-[r3:T3]-(n5)")
.|.filter("`  n3@1`:L2", "r2.k67 <= $`  AUTOSTRING2`", "`  n3@1`:L0", "`  n3@1`:L5", "CoerceToPredicate(`  n3@1`.k17)", "CoerceToPredicate(`  n3@1`.k32)")
.|.expandAll("(n4)<-[r2:T4]-(  n3@1)")
.|.expandAll("(n4)<-[r5:T5]-(n5)")
.|.nodeByLabelScan("n4", "L5", IndexOrderNone, "r0")
.filter("r0.k50 > $`  AUTOINT1`")
.sort(Seq(Descending("r0.k54")))
.projection("r0.k54 AS `r0.k54`")
.filter("n2:L0", "not r0.id = r1.id", "r1.k63 >= $`  AUTOINT0`")
.expandAll("(n1)<-[r1:T3]-(n2)")
.expandAll("(  n0@0)-[r0:T1]->(n1)")
.nodeByLabelScan("  n0@0", "L0", IndexOrderNone)
.build()}. Triggering Query: MATCH (n0 :L0)-[r0 :T1]->(n1)<-[r1 :T3]-(n2 :L0) WHERE ((717715710 <= (r1.k63)) AND ((r0.id) <> (r1.id))) WITH r0 ORDER BY (r0.k54) DESC WHERE ((r0.k50) > -913451956) MATCH (n3 :L0 :L2 :L5)-[r2 :T4]->(n4 :L5)<-[r3 :T3]-(n5), (n6 :L1)-[r4 :T3]->(n0) WHERE (((((n3.k17) AND (n3.k32)) AND ((r2.id) <> (r3.id))) AND ((r2.id) <> (r4.id))) AND ((r3.id) <> (r4.id))) MATCH (n4)<-[r5 :T5]-(n5), (n8 :L2)<-[r7 :T2]-(n9 :L6) WHERE (('um2' >= (r2.k67)) AND ((r5.id) <> (r7.id))) WITH DISTINCT max('KlWE2S') AS a0, (r0.k54) AS a1, max('RSP') AS a2 WITH * WHERE (NOT true) WITH * WITH a0 OPTIONAL MATCH (n3 :L0)<-[r8 :T1]-(n9) WHERE ((n3.k4) AND (n3.k4)) RETURN a0 ORDER BY a0
2023-04-21 15:23:38,642 - root - INFO - Unexpected exception: 'RootLogger' object has no attribute 'WARNING'. Triggering Query: MATCH (n0 :L0 :L2 :L6)-[r0 :T1]->(n1 :L5)<-[r1 :T1]-(n2) WHERE (((r0.id) > -1) AND ((r0.id) <> (r1.id))) WITH (r0.k52) AS a0, r1, (r0.k52) AS a1 ORDER BY (r1.k53) WHERE (true AND true) WITH a1 WITH a1 MATCH (n2)-[]->(n1)<-[]-(n0) WHERE true WITH n2 WHERE true OPTIONAL MATCH (n2 :L5)-[]->(n1)<-[]-(n0), (n0)-[r2 :T1]->(n3 :L4 :L2)<-[r3 :T2]-(n0 :L0) WHERE (((r2.id) > -1) AND ((r2.id) <> (r3.id))) OPTIONAL MATCH (n2)-[]->(n1 :L5)<-[]-(n0) WHERE ('4s5B' ENDS WITH 'elV4s5B') OPTIONAL MATCH (n2)-[r4 :T1]->(n4 :L0) WHERE ((n1.k34) >= '1vY') RETURN (r3.k56) AS a2, (r3.k59) AS a3, (n4.k3) AS a4
2023-04-21 15:28:23,014 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2023-04-21 15:28:25,730 - root - INFO - Unexpected exception: {code: Neo.DatabaseError.General.UnknownError} {message: Expected a sorted plan but got
.apply(fromSubquery = false)
.|.argument()
.projection(project = Seq("NULL AS `  UNNAMED3`", "NULL AS `  n0@265`", "NULL AS `  n1@266`", "NULL AS `  UNNAMED2`", "NULL AS `  UNNAMED0`", "NULL AS `  n2@267`", "NULL AS `  UNNAMED1`"), discard = Set("a1", "a3", "a0", "a2"))
.limit(0)
.apply(fromSubquery = false)
.|.argument()
.filter("true")
.aggregation(Seq("`  n3@262`.k2 AS a1", "r3.k73 AS a3"), Seq("min($`  AUTOINT2`) AS a0", "min($`  AUTOSTRING3`) AS a2"))
.apply(fromSubquery = false)
.|.optional("  n3@262", "r2", "  n1@261")
.|.filter("`  n0@264`:L0")
.|.expandAll("(  n4@263)<-[r3:T5]-(  n0@264)")
.|.filter("`  n4@263`.k29 >= $`  AUTOSTRING1`")
.|.nodeByLabelScan("  n4@263", "L4", IndexOrderNone)
.filter("r2.id > $`  AUTOINT0`")
.expandAll("(  n3@262)-[r2:T3]->(  n1@261)")
.nodeByLabelScan("  n3@262", "L0", IndexOrderNone)
.build()}. Triggering Query: MATCH (n1), (n1)<-[r2 :T3]-(n3 :L0) WHERE ((r2.id) > -1) OPTIONAL MATCH (n4 :L4)<-[r3 :T5]-(n0 :L0) WHERE ((n4.k29) >= '1kV3AF5') WITH min(1975971580) AS a0, (n3.k2) AS a1, min('K') AS a2, (r3.k73) AS a3 WHERE true MATCH (n0 :L1)-[]->(n1)<-[]-(n2 :L2) WHERE (NOT true) MATCH (n0)-[]->(n1)<-[]-(n2 :L0) WITH a1 ORDER BY a1 WHERE true OPTIONAL MATCH (n4 :L4)<-[]-(n0) OPTIONAL MATCH (n2 :L2)-[]->(n1)<-[]-(n3) WHERE ((n2.k12) <= (n2.k14)) OPTIONAL MATCH (n2)-[]->(n1)<-[]-(n3) RETURN a1
2023-04-21 15:29:08,757 - root - INFO - Unexpected exception: {code: Neo.DatabaseError.General.UnknownError} {message: Expected a sorted plan but got
.apply(fromSubquery = false)
.|.argument()
.projection(project = Seq("NULL AS `  n3@4`", "NULL AS `  n9@5`", "NULL AS r8"), discard = Set("a1", "a0", "a2"))
.limit(0)
.apply(fromSubquery = false)
.|.argument()
.orderedAggregation(Seq("r0.k54 AS a1"), Seq("max($`  AUTOSTRING3`) AS a0", "max($`  AUTOSTRING4`) AS a2"), Seq("r0.k54"))
.apply(fromSubquery = false)
.|.filter("not r5.id = r7.id")
.|.cartesianProduct(fromSubquery = false)
.|.|.filter("`  n9@3`:L6")
.|.|.expandAll("(n8)<-[r7:T2]-(  n9@3)")
.|.|.nodeByLabelScan("n8", "L2", IndexOrderNone, "r0")
.|.filter("not r2.id = r4.id", "not r3.id = r4.id", "not `r3` = `r4`")
.|.cartesianProduct(fromSubquery = false)
.|.|.expandAll("(n6)-[r4:T3]->(  n0@2)")
.|.|.nodeByLabelScan("n6", "L1", IndexOrderNone, "r0")
.|.filter("not r2.id = r3.id")
.|.expandInto("(n4)<-[r3:T3]-(n5)")
.|.filter("`  n3@1`:L2", "r2.k67 <= $`  AUTOSTRING2`", "`  n3@1`:L0", "`  n3@1`:L5", "CoerceToPredicate(`  n3@1`.k17)", "CoerceToPredicate(`  n3@1`.k32)")
.|.expandAll("(n4)<-[r2:T4]-(  n3@1)")
.|.expandAll("(n4)<-[r5:T5]-(n5)")
.|.nodeByLabelScan("n4", "L5", IndexOrderNone, "r0")
.filter("r0.k50 > $`  AUTOINT1`")
.sort(Seq(Descending("r0.k54")))
.projection("r0.k54 AS `r0.k54`")
.filter("n2:L0", "not r0.id = r1.id", "r1.k63 >= $`  AUTOINT0`")
.expandAll("(n1)<-[r1:T3]-(n2)")
.expandAll("(  n0@0)-[r0:T1]->(n1)")
.nodeByLabelScan("  n0@0", "L0", IndexOrderNone)
.build()}. Triggering Query: MATCH (n0 :L0)-[r0 :T1]->(n1)<-[r1 :T3]-(n2 :L0) WHERE ((717715710 <= (r1.k63)) AND ((r0.id) <> (r1.id))) WITH r0 ORDER BY (r0.k54) DESC WHERE ((r0.k50) > -913451956) MATCH (n3 :L0 :L2 :L5)-[r2 :T4]->(n4 :L5)<-[r3 :T3]-(n5), (n6 :L1)-[r4 :T3]->(n0) WHERE (((((n3.k17) AND (n3.k32)) AND ((r2.id) <> (r3.id))) AND ((r2.id) <> (r4.id))) AND ((r3.id) <> (r4.id))) MATCH (n4)<-[r5 :T5]-(n5), (n8 :L2)<-[r7 :T2]-(n9 :L6) WHERE (('um2' >= (r2.k67)) AND ((r5.id) <> (r7.id))) WITH DISTINCT max('KlWE2S') AS a0, (r0.k54) AS a1, max('RSP') AS a2 WITH * WHERE (NOT true) WITH * WITH a0 OPTIONAL MATCH (n3 :L0)<-[r8 :T1]-(n9) WHERE ((n3.k4) AND (n3.k4)) RETURN a0 ORDER BY a0
2023-04-21 15:29:21,857 - root - WARNING - Logic inconsistency: Query1[MATCH (n0 :L0 :L2 :L6)-[r0 :T1]->(n1 :L5)<-[r1 :T1]-(n2) WHERE (((r0.id) > -1) AND ((r0.id) <> (r1.id))) WITH (r0.k52) AS a0, r1, (r0.k52) AS a1 ORDER BY (r1.k53) WHERE (true AND true) WITH a1 WITH a1 MATCH (n2)-[]->(n1)<-[]-(n0) WHERE true WITH n2 WHERE true OPTIONAL MATCH (n2 :L5)-[]->(n1)<-[]-(n0), (n0)-[r2 :T1]->(n3 :L4 :L2)<-[r3 :T2]-(n0 :L0) WHERE (((r2.id) > -1) AND ((r2.id) <> (r3.id))) OPTIONAL MATCH (n2)-[]->(n1 :L5)<-[]-(n0) WHERE ('4s5B' ENDS WITH 'elV4s5B') OPTIONAL MATCH (n2)-[r4 :T1]->(n4 :L0) WHERE ((n1.k34) >= '1vY') RETURN (r3.k56) AS a2, (r3.k59) AS a3, (n4.k3) AS a4], Query2[MATCH (n0 :L6 :L0 :L2)-[r0 :T1]->(n1 :L5), (n2)-[r1 :T1]->(n1 :L5) WHERE (((r0.id) > -1) AND ((r0.id) <> (r1.id))) WITH (r0.k52) AS a0, r1, (r0.k52) AS a1 ORDER BY (r1.k53) WHERE (true AND true) WITH a1 WITH a1 MATCH (n1), (n0)-[]->(n1), (n2)-[]->(n1) WHERE true WITH n2 WHERE true OPTIONAL MATCH (n3 :L4 :L2)<-[r3 :T2]-(n0 :L0)-[r2 :T1]->(n3 :L4 :L2), (n0 :L0)-[]->(n1)<-[]-(n2 :L5) WHERE (((r2.id) > -1) AND ((r2.id) <> (r3.id))) OPTIONAL MATCH (n1 :L5)<-[]-(n0), (n1 :L5)<-[]-(n2) WHERE ('4s5B' ENDS WITH 'elV4s5B') OPTIONAL MATCH (n2)-[r4 :T1]->(n4 :L0) WHERE ((n1.k34) >= '1vY') RETURN (r3.k56) AS a2, (r3.k59) AS a3, (n4.k3) AS a4]
2023-04-21 15:29:22,010 - root - WARNING - Logic inconsistency: Query1[MATCH (n0 :L0 :L2 :L6)-[r0 :T1]->(n1 :L5)<-[r1 :T1]-(n2) WHERE (((r0.id) > -1) AND ((r0.id) <> (r1.id))) WITH (r0.k52) AS a0, r1, (r0.k52) AS a1 ORDER BY (r1.k53) WHERE (true AND true) WITH a1 WITH a1 MATCH (n2)-[]->(n1)<-[]-(n0) WHERE true WITH n2 WHERE true OPTIONAL MATCH (n2 :L5)-[]->(n1)<-[]-(n0), (n0)-[r2 :T1]->(n3 :L4 :L2)<-[r3 :T2]-(n0 :L0) WHERE (((r2.id) > -1) AND ((r2.id) <> (r3.id))) OPTIONAL MATCH (n2)-[]->(n1 :L5)<-[]-(n0) WHERE ('4s5B' ENDS WITH 'elV4s5B') OPTIONAL MATCH (n2)-[r4 :T1]->(n4 :L0) WHERE ((n1.k34) >= '1vY') RETURN (r3.k56) AS a2, (r3.k59) AS a3, (n4.k3) AS a4], Query2[MATCH (n1 :L5)<-[r0 :T1]-(n0 :L6 :L0 :L2), (n2)-[r1 :T1]->(n1 :L5) WHERE (((r0.id) > -1) AND ((r0.id) <> (r1.id))) WITH (r0.k52) AS a0, r1, (r0.k52) AS a1 ORDER BY (r1.k53) WHERE (true AND true) WITH a1 WITH a1 MATCH (n0), (n0)-[]->(n1)<-[]-(n2) WHERE true WITH n2 WHERE true OPTIONAL MATCH (n3 :L4 :L2), (n0 :L0)-[r3 :T2]->(n3 :L4 :L2), (n0 :L0)-[]->(n1), (n2 :L5)-[]->(n1), (n3 :L4 :L2), (n0 :L0)-[r2 :T1]->(n3 :L4 :L2) WHERE (((r2.id) > -1) AND ((r2.id) <> (r3.id))) OPTIONAL MATCH (n1 :L5)<-[]-(n0), (n2)-[]->(n1 :L5) WHERE ('4s5B' ENDS WITH 'elV4s5B') OPTIONAL MATCH (n2), (n4 :L0)<-[r4 :T1]-(n2) WHERE ((n1.k34) >= '1vY') RETURN (r3.k56) AS a2, (r3.k59) AS a3, (n4.k3) AS a4]
2023-04-21 15:57:20,949 - neo4j - ERROR - Failed to read from defunct connection IPv4Address(('10.20.10.27', 7687)) (IPv4Address(('10.20.10.27', 7687)))
2023-04-21 15:57:22,128 - root - INFO - Unexpected exception: Failed to read from defunct connection IPv4Address(('10.20.10.27', 7687)) (IPv4Address(('10.20.10.27', 7687))). Triggering Query: MATCH (n0 :L6), (n1 :L6) WHERE (n1.k39) WITH (n1.k40) AS a0, n0 MATCH (n1) WHERE ((n0.k39) AND true) MATCH (n1), (n0 :L6), (n0) WITH DISTINCT (n0.k37) AS a1, n0 WITH a1 WHERE (1080878810 >= 1036547312) MATCH (n0), (n1), (n0 :L6) WITH a1 WHERE true MATCH (n0 :L6), (n1) RETURN 1 AS a2
